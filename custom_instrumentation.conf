# $Id$
#
###################  APM Insight Java Agent - Custom instrumentation configuration File  ###################
#
# APM Insight java agent instruments only predefined/known methods like Filter.doFilter(), Servlet.doGet(), etc
# If you need to instrument your own classes & methods, that can be achieved by defining them here as per the syntax specified below.
#
# ***********************************************************************************************************
#	Fully qualified ClassName : methodNames separated by comma(,) : Component Name of your choice
# ***********************************************************************************************************
#
# Leaving methodNames emtpy means you set to instrument all methods of the class specified in colon's (:) left hand side
# Component Name can contain only a-zA-Z_0-9 characters. If Component Name is left empty or invalid, agent considers it as POJO (Plain Java Object)
# If you wish to provide different Component Name for methods of a same class, you should specify them as separate entry in new line.
# 

# Examples:

com/manageengine/apminsight/agent/metrics/data/transport/MetricDataDispatcher : run, dispatchMetric : METRICS_DISPATCH
com/manageengine/apminsight/agent/metrics/data/transport/MetricDataDispatcher : dispatchSequenceTrace : TRACES_DISPATCH

com/manageengine/apminsight/agent/statistics/StatisticsPrinter : : STATISTICS

# The below example will instrument all methods of all classes under the specified package.
# It is not recommended to specify an input like the one mentioned below, as it will instrument your not interested methods and make the trace lengthy.
# It can only be used in a case where you would want to know the flow of code.

# Example:

com/manageengine/apminsight/agent/metrics/data/transport/.* : :
